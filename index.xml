<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>爱狂热博客</title>
    <link>http://hmx224.github.io/</link>
    <description>Recent content on 爱狂热博客</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <lastBuildDate>Wed, 11 Sep 2024 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="http://hmx224.github.io/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>php面试题汇总</title>
      <link>http://hmx224.github.io/interviews/first/</link>
      <pubDate>Wed, 09 Dec 2020 21:59:26 +0800</pubDate>
      
      <guid>http://hmx224.github.io/interviews/first/</guid>
      <description>php层面 请用最简单的语言告诉我PHP是什么？ 回答：PHP全称：Hypertext Preprocessor，是一种用来开发动态网站的服务器脚本语言。 1.get,post 的区别 1、GET在浏览器回退时是无害的，而POST会再次提交请求。 2、GET产生的URL地址可以被Bookmark，而POST不可</description>
    </item>
    
    <item>
      <title>PhpInterview2018</title>
      <link>http://hmx224.github.io/interviews/phpInterview2018/</link>
      <pubDate>Tue, 24 Nov 2020 22:11:40 +0800</pubDate>
      
      <guid>http://hmx224.github.io/interviews/phpInterview2018/</guid>
      <description>PHP 高级工程面试题汇总 (2018.05) 1、给你四个坐标点，判断它们能不能组成一个矩形，如判断 ([0,0],[0,1],[1,1],[1,0]) 能组成一个矩形。 勾股定理，矩形是对角线相等的四边形。只要任意三点不在一条直线上，任选一点，求这一点到另外三点的长度的平方，两个短的之和如果等于最长的，那么这就是矩形。 2、写一段代码判断单向链表中有没有形</description>
    </item>
    
    <item>
      <title>Tcpip</title>
      <link>http://hmx224.github.io/interviews/tcpip/</link>
      <pubDate>Thu, 10 Dec 2020 19:49:18 +0800</pubDate>
      
      <guid>http://hmx224.github.io/interviews/tcpip/</guid>
      <description>http和https的区别 HTTPS和HTTP的区别主要如下： https协议需要到ca申请证书，一般免费证书较少，因而需要一定费用。 http是超文本传输协议，信息是明文传输，https则是具有安全性的ssl加密传输协议。 http和https使用的是完全不同的连接方式，用的端口也不</description>
    </item>
    
    <item>
      <title>结课测试｜来赴一场满分之约！</title>
      <link>http://hmx224.github.io/interviews/%E7%BB%93%E8%AF%BE%E6%B5%8B%E8%AF%95%E6%9D%A5%E8%B5%B4%E4%B8%80%E5%9C%BA%E6%BB%A1%E5%88%86%E4%B9%8B%E7%BA%A6/</link>
      <pubDate>Wed, 11 Sep 2024 00:00:00 +0000</pubDate>
      
      <guid>http://hmx224.github.io/interviews/%E7%BB%93%E8%AF%BE%E6%B5%8B%E8%AF%95%E6%9D%A5%E8%B5%B4%E4%B8%80%E5%9C%BA%E6%BB%A1%E5%88%86%E4%B9%8B%E7%BA%A6/</guid>
      <description>结课测试｜来赴一场满分之约！ 你好，我是邓明。 《后端工程师的高阶面经》的更新告一段落，非常开心能和你交流技术、共同进步，为认真学习的你点赞！为了帮你检验自己的学习成果，我特意准备了一套期末测试题。题目共有 20 道，11 道单选题，9 道多选题，满分 100 分，快来挑战一下吧！</description>
    </item>
    
    <item>
      <title>结束语｜未来掌握在自己手中</title>
      <link>http://hmx224.github.io/interviews/%E7%BB%93%E6%9D%9F%E8%AF%AD%E6%9C%AA%E6%9D%A5%E6%8E%8C%E6%8F%A1%E5%9C%A8%E8%87%AA%E5%B7%B1%E6%89%8B%E4%B8%AD/</link>
      <pubDate>Wed, 11 Sep 2024 00:00:00 +0000</pubDate>
      
      <guid>http://hmx224.github.io/interviews/%E7%BB%93%E6%9D%9F%E8%AF%AD%E6%9C%AA%E6%9D%A5%E6%8E%8C%E6%8F%A1%E5%9C%A8%E8%87%AA%E5%B7%B1%E6%89%8B%E4%B8%AD/</guid>
      <description>结束语｜未来掌握在自己手中 你好，我是大明。 历经几个月，这门课程终于要完结了，感谢你一路的支持与相伴。这段时间我总是能在评论区看到各种各样有意思的问题、观点和分享，甚至里面有一些我都没有想到的解决方案，真真的应了那句“教学相长”。 这段时间，也一直有训练营的学员找我反馈，说这门课程切</description>
    </item>
    
    <item>
      <title>模拟面试｜缓存面试思路一图懂</title>
      <link>http://hmx224.github.io/interviews/%E6%A8%A1%E6%8B%9F%E9%9D%A2%E8%AF%95%E7%BC%93%E5%AD%98%E9%9D%A2%E8%AF%95%E6%80%9D%E8%B7%AF%E4%B8%80%E5%9B%BE%E6%87%82/</link>
      <pubDate>Wed, 11 Sep 2024 00:00:00 +0000</pubDate>
      
      <guid>http://hmx224.github.io/interviews/%E6%A8%A1%E6%8B%9F%E9%9D%A2%E8%AF%95%E7%BC%93%E5%AD%98%E9%9D%A2%E8%AF%95%E6%80%9D%E8%B7%AF%E4%B8%80%E5%9B%BE%E6%87%82/</guid>
      <description>模拟面试｜缓存面试思路一图懂 你好，我是大明。 恭喜你学完第四章的内容，又到了要验收成果的时刻了。缓存这一章的内容很重要，知识也很系统，所以为了帮助你更好地掌握这部分内容，我们在这里设置了面试题。 你在回答的时候，最好是能够写成一个个文档，至少也要口头上说一遍。千万不要仅仅在脑海里面回</description>
    </item>
    
    <item>
      <title>模拟面试｜消息队列面试思路一图懂</title>
      <link>http://hmx224.github.io/interviews/%E6%A8%A1%E6%8B%9F%E9%9D%A2%E8%AF%95%E6%B6%88%E6%81%AF%E9%98%9F%E5%88%97%E9%9D%A2%E8%AF%95%E6%80%9D%E8%B7%AF%E4%B8%80%E5%9B%BE%E6%87%82/</link>
      <pubDate>Wed, 11 Sep 2024 00:00:00 +0000</pubDate>
      
      <guid>http://hmx224.github.io/interviews/%E6%A8%A1%E6%8B%9F%E9%9D%A2%E8%AF%95%E6%B6%88%E6%81%AF%E9%98%9F%E5%88%97%E9%9D%A2%E8%AF%95%E6%80%9D%E8%B7%AF%E4%B8%80%E5%9B%BE%E6%87%82/</guid>
      <description>模拟面试｜消息队列面试思路一图懂 你好，我是大明，恭喜你学完第三章的内容，又到了要验收成果的时刻了。消息队列这一章的内容很重要，知识也很系统，所以为了帮助你更好地掌握这部分内容，我们在这里设置了面试题。 你在回答的时候，最好是能够写成一个个文档，至少也要口头上说一遍。千万不要仅仅在脑</description>
    </item>
    
    <item>
      <title>模拟面试｜数据库面试思路一图懂</title>
      <link>http://hmx224.github.io/interviews/%E6%A8%A1%E6%8B%9F%E9%9D%A2%E8%AF%95%E6%95%B0%E6%8D%AE%E5%BA%93%E9%9D%A2%E8%AF%95%E6%80%9D%E8%B7%AF%E4%B8%80%E5%9B%BE%E6%87%82/</link>
      <pubDate>Wed, 11 Sep 2024 00:00:00 +0000</pubDate>
      
      <guid>http://hmx224.github.io/interviews/%E6%A8%A1%E6%8B%9F%E9%9D%A2%E8%AF%95%E6%95%B0%E6%8D%AE%E5%BA%93%E9%9D%A2%E8%AF%95%E6%80%9D%E8%B7%AF%E4%B8%80%E5%9B%BE%E6%87%82/</guid>
      <description>模拟面试｜数据库面试思路一图懂 你好，我是大明，恭喜你学完第二章的内容，又到了要验收成果的时刻了。数据库这一章的内容很多，而且知识点都很重要，所以为了帮助你更好地掌握这部分内容，我们在这里设置了面试题。 你在回答的时候，最好是能够写成一个个文档，至少也要口头上说一遍。千万不要仅仅在脑</description>
    </item>
    
    <item>
      <title>模拟面试｜NoSQL面试思路一图懂</title>
      <link>http://hmx224.github.io/interviews/%E6%A8%A1%E6%8B%9F%E9%9D%A2%E8%AF%95NoSQL%E9%9D%A2%E8%AF%95%E6%80%9D%E8%B7%AF%E4%B8%80%E5%9B%BE%E6%87%82/</link>
      <pubDate>Wed, 11 Sep 2024 00:00:00 +0000</pubDate>
      
      <guid>http://hmx224.github.io/interviews/%E6%A8%A1%E6%8B%9F%E9%9D%A2%E8%AF%95NoSQL%E9%9D%A2%E8%AF%95%E6%80%9D%E8%B7%AF%E4%B8%80%E5%9B%BE%E6%87%82/</guid>
      <description>模拟面试｜NoSQL面试思路一图懂 你好，我是大明。 不知不觉已经到了课程的最后一章了。这一章的内容虽然较前几章来说没那么多，但是NoSQL的内容还是很重要的，尤其是近几年，在面试中出现的频次越来越高。所以为了让你对这部分内容掌握得更加牢固，我列出了一些问题，帮助你编织出自己的知识网</description>
    </item>
    
    <item>
      <title>模拟面试（一）｜微服务架构面试思路一图懂</title>
      <link>http://hmx224.github.io/interviews/%E6%A8%A1%E6%8B%9F%E9%9D%A2%E8%AF%95%E4%B8%80%E5%BE%AE%E6%9C%8D%E5%8A%A1%E6%9E%B6%E6%9E%84%E9%9D%A2%E8%AF%95%E6%80%9D%E8%B7%AF%E4%B8%80%E5%9B%BE%E6%87%82/</link>
      <pubDate>Wed, 11 Sep 2024 00:00:00 +0000</pubDate>
      
      <guid>http://hmx224.github.io/interviews/%E6%A8%A1%E6%8B%9F%E9%9D%A2%E8%AF%95%E4%B8%80%E5%BE%AE%E6%9C%8D%E5%8A%A1%E6%9E%B6%E6%9E%84%E9%9D%A2%E8%AF%95%E6%80%9D%E8%B7%AF%E4%B8%80%E5%9B%BE%E6%87%82/</guid>
      <description>模拟面试（一）｜微服务架构面试思路一图懂 你好，我是大明。 恭喜你学完第一章的内容，终于到了要验收成果的时刻了。微服务这一章的内容很多，而且知识点之间盘根错节，记忆起来并不容易，所以为了帮助你更好地掌握这部分内容，我们在这里设置了面试题。 你在回答的时候，最好是能够写成一个文档，至少也</description>
    </item>
    
    <item>
      <title>42｜MongoDB高性能：怎么优化MongoDB的查询性能？</title>
      <link>http://hmx224.github.io/interviews/42MongoDB%E9%AB%98%E6%80%A7%E8%83%BD%E6%80%8E%E4%B9%88%E4%BC%98%E5%8C%96MongoDB%E7%9A%84%E6%9F%A5%E8%AF%A2%E6%80%A7%E8%83%BD/</link>
      <pubDate>Wed, 11 Sep 2024 00:00:00 +0000</pubDate>
      
      <guid>http://hmx224.github.io/interviews/42MongoDB%E9%AB%98%E6%80%A7%E8%83%BD%E6%80%8E%E4%B9%88%E4%BC%98%E5%8C%96MongoDB%E7%9A%84%E6%9F%A5%E8%AF%A2%E6%80%A7%E8%83%BD/</guid>
      <description>42｜MongoDB高性能：怎么优化MongoDB的查询性能？ 你好，我是大明。今天我们来学习 MongoDB 的另外一个热点面试主题——优化 MongoDB 的查询性能。 就像之前我多次提到的，任何中间件的面试说到底就是以高可用、高性能和高并发为主。高性能和高并发可以说是孪生兄弟，你做到了高性能，基本上就做到了高</description>
    </item>
    
    <item>
      <title>41｜MongoDB：MongoDB是怎么做到高可用的？</title>
      <link>http://hmx224.github.io/interviews/41MongoDBMongoDB%E6%98%AF%E6%80%8E%E4%B9%88%E5%81%9A%E5%88%B0%E9%AB%98%E5%8F%AF%E7%94%A8%E7%9A%84/</link>
      <pubDate>Wed, 11 Sep 2024 00:00:00 +0000</pubDate>
      
      <guid>http://hmx224.github.io/interviews/41MongoDBMongoDB%E6%98%AF%E6%80%8E%E4%B9%88%E5%81%9A%E5%88%B0%E9%AB%98%E5%8F%AF%E7%94%A8%E7%9A%84/</guid>
      <description>41｜MongoDB：MongoDB 是怎么做到高可用的？ 你好，我是大明。今天我们看另外一个 NoSQL 数据库，也就是大名鼎鼎的 MongoDB。 MongoDB 是出现得比较早的文档型数据库，应该说早期我们谈到 NoSQL 的时候，第一个想到的就是 MongoDB。到现在，很多公司内部都使用了 MongoDB 来保存一些偏向文档类型的数</description>
    </item>
    
    <item>
      <title>40｜Elasticsearch查询：怎么优化Elasticsearch的查询性能？</title>
      <link>http://hmx224.github.io/interviews/40Elasticsearch%E6%9F%A5%E8%AF%A2%E6%80%8E%E4%B9%88%E4%BC%98%E5%8C%96Elasticsearch%E7%9A%84%E6%9F%A5%E8%AF%A2%E6%80%A7%E8%83%BD/</link>
      <pubDate>Wed, 11 Sep 2024 00:00:00 +0000</pubDate>
      
      <guid>http://hmx224.github.io/interviews/40Elasticsearch%E6%9F%A5%E8%AF%A2%E6%80%8E%E4%B9%88%E4%BC%98%E5%8C%96Elasticsearch%E7%9A%84%E6%9F%A5%E8%AF%A2%E6%80%A7%E8%83%BD/</guid>
      <description>40｜Elasticsearch查询：怎么优化 Elasticsearch 的查询性能？ 你好，我是大明。今天我们学习 Elasticsearch 的另外一个关键主题——高性能。 如果你经常和 Elasticsearch 打交道，你十有八九遇到过 Elasticsearch 的性能问题。这也就是为什么在面试中我们经常会遇到 Elasticsearch 性能优化相关的问题。 那么今天我就带你看看怎么优化 Elasticsearch 的性能，在面试中赢得</description>
    </item>
    
    <item>
      <title>39｜Elasticsearch高可用：怎么保证Elasticsearch的高可用？</title>
      <link>http://hmx224.github.io/interviews/39Elasticsearch%E9%AB%98%E5%8F%AF%E7%94%A8%E6%80%8E%E4%B9%88%E4%BF%9D%E8%AF%81Elasticsearch%E7%9A%84%E9%AB%98%E5%8F%AF%E7%94%A8/</link>
      <pubDate>Wed, 11 Sep 2024 00:00:00 +0000</pubDate>
      
      <guid>http://hmx224.github.io/interviews/39Elasticsearch%E9%AB%98%E5%8F%AF%E7%94%A8%E6%80%8E%E4%B9%88%E4%BF%9D%E8%AF%81Elasticsearch%E7%9A%84%E9%AB%98%E5%8F%AF%E7%94%A8/</guid>
      <description>39｜Elasticsearch高可用：怎么保证Elasticsearch的高可用？ 你好，我是大明。今天开始我们要学习一个新的主题——NoSQL。在这个主题里面，我们先从 Elasticsearch 开始学起。 Elasticsearch 从面试的热度上来说，肯定是比不过数据库、缓存和消息队列。但是 Elasticsearch 在中大型公司里面又非常常用，这意味</description>
    </item>
    
    <item>
      <title>38｜缓存综合应用：怎么用缓存来提高整个应用的性能？</title>
      <link>http://hmx224.github.io/interviews/38%E7%BC%93%E5%AD%98%E7%BB%BC%E5%90%88%E5%BA%94%E7%94%A8%E6%80%8E%E4%B9%88%E7%94%A8%E7%BC%93%E5%AD%98%E6%9D%A5%E6%8F%90%E9%AB%98%E6%95%B4%E4%B8%AA%E5%BA%94%E7%94%A8%E7%9A%84%E6%80%A7%E8%83%BD/</link>
      <pubDate>Wed, 11 Sep 2024 00:00:00 +0000</pubDate>
      
      <guid>http://hmx224.github.io/interviews/38%E7%BC%93%E5%AD%98%E7%BB%BC%E5%90%88%E5%BA%94%E7%94%A8%E6%80%8E%E4%B9%88%E7%94%A8%E7%BC%93%E5%AD%98%E6%9D%A5%E6%8F%90%E9%AB%98%E6%95%B4%E4%B8%AA%E5%BA%94%E7%94%A8%E7%9A%84%E6%80%A7%E8%83%BD/</guid>
      <description>38｜缓存综合应用：怎么用缓存来提高整个应用的性能？ 你好，我是大明。今天我们来讨论一个话题——怎么优雅地使用缓存来提高整个应用的性能。 早在微服务部分，我就和你说过，面试中比较好用的就是高可用方案和高性能方案。那么在高性能方案里面，缓存就是一个绕不过的坎。 但是大部分人在面试的时候，</description>
    </item>
    
    <item>
      <title>37｜分布式锁：如何保证Redis分布式锁的高可用和高性能？</title>
      <link>http://hmx224.github.io/interviews/37%E5%88%86%E5%B8%83%E5%BC%8F%E9%94%81%E5%A6%82%E4%BD%95%E4%BF%9D%E8%AF%81Redis%E5%88%86%E5%B8%83%E5%BC%8F%E9%94%81%E7%9A%84%E9%AB%98%E5%8F%AF%E7%94%A8%E5%92%8C%E9%AB%98%E6%80%A7%E8%83%BD/</link>
      <pubDate>Wed, 11 Sep 2024 00:00:00 +0000</pubDate>
      
      <guid>http://hmx224.github.io/interviews/37%E5%88%86%E5%B8%83%E5%BC%8F%E9%94%81%E5%A6%82%E4%BD%95%E4%BF%9D%E8%AF%81Redis%E5%88%86%E5%B8%83%E5%BC%8F%E9%94%81%E7%9A%84%E9%AB%98%E5%8F%AF%E7%94%A8%E5%92%8C%E9%AB%98%E6%80%A7%E8%83%BD/</guid>
      <description>37｜分布式锁：如何保证Redis分布式锁的高可用和高性能？ 你好，我是大明。今天我们来学习一个面试中热度极高的话题——分布式锁。 分布式锁和分布式事务，可以说是分布式系统里面两个又热又难的话题。从理论上来说，分布式锁和分布式事务都涉及到了很多分布式系统里面的基本概念，所以我们不愁找</description>
    </item>
    
    <item>
      <title>36｜Redis单线程：为什么Redis用单线程而Memcached用多线程？</title>
      <link>http://hmx224.github.io/interviews/36Redis%E5%8D%95%E7%BA%BF%E7%A8%8B%E4%B8%BA%E4%BB%80%E4%B9%88Redis%E7%94%A8%E5%8D%95%E7%BA%BF%E7%A8%8B%E8%80%8CMemcached%E7%94%A8%E5%A4%9A%E7%BA%BF%E7%A8%8B/</link>
      <pubDate>Wed, 11 Sep 2024 00:00:00 +0000</pubDate>
      
      <guid>http://hmx224.github.io/interviews/36Redis%E5%8D%95%E7%BA%BF%E7%A8%8B%E4%B8%BA%E4%BB%80%E4%B9%88Redis%E7%94%A8%E5%8D%95%E7%BA%BF%E7%A8%8B%E8%80%8CMemcached%E7%94%A8%E5%A4%9A%E7%BA%BF%E7%A8%8B/</guid>
      <description>36｜Redis 单线程：为什么 Redis 用单线程而 Memcached 用多线程？ 你好，我是大明。今天我们来探讨一下Redis 高性能的原因。 这个问题在面试中还是很常见的，原因也很简单，除了 Redis 你基本上没有听过其他采用单线程模型的中间件，所以这就凸显了 Redis 的与众不同。 而且这个问题也很有现实意义。大部分时候对 Redis 的一</description>
    </item>
    
    <item>
      <title>35｜缓存问题：怎么解决缓存穿透、击穿和雪崩问题？</title>
      <link>http://hmx224.github.io/interviews/35%E7%BC%93%E5%AD%98%E9%97%AE%E9%A2%98%E6%80%8E%E4%B9%88%E8%A7%A3%E5%86%B3%E7%BC%93%E5%AD%98%E7%A9%BF%E9%80%8F%E5%87%BB%E7%A9%BF%E5%92%8C%E9%9B%AA%E5%B4%A9%E9%97%AE%E9%A2%98/</link>
      <pubDate>Wed, 11 Sep 2024 00:00:00 +0000</pubDate>
      
      <guid>http://hmx224.github.io/interviews/35%E7%BC%93%E5%AD%98%E9%97%AE%E9%A2%98%E6%80%8E%E4%B9%88%E8%A7%A3%E5%86%B3%E7%BC%93%E5%AD%98%E7%A9%BF%E9%80%8F%E5%87%BB%E7%A9%BF%E5%92%8C%E9%9B%AA%E5%B4%A9%E9%97%AE%E9%A2%98/</guid>
      <description>35｜缓存问题：怎么解决缓存穿透、击穿和雪崩问题？ 你好，我是大明。今天我们再来聊一个缓存中的热门面试话题：怎么解决缓存穿透、击穿和雪崩问题。 这个问题之所以常见，是因为你在使用缓存的过程中一不小心就会遇到它们。比如说在前面的课程里面我给你讲过，如果缓存崩溃，那么大量请求就会落到数据</description>
    </item>
    
    <item>
      <title>34｜缓存一致性问题：高并发服务如何保证缓存一致性？</title>
      <link>http://hmx224.github.io/interviews/34%E7%BC%93%E5%AD%98%E4%B8%80%E8%87%B4%E6%80%A7%E9%97%AE%E9%A2%98%E9%AB%98%E5%B9%B6%E5%8F%91%E6%9C%8D%E5%8A%A1%E5%A6%82%E4%BD%95%E4%BF%9D%E8%AF%81%E7%BC%93%E5%AD%98%E4%B8%80%E8%87%B4%E6%80%A7/</link>
      <pubDate>Wed, 11 Sep 2024 00:00:00 +0000</pubDate>
      
      <guid>http://hmx224.github.io/interviews/34%E7%BC%93%E5%AD%98%E4%B8%80%E8%87%B4%E6%80%A7%E9%97%AE%E9%A2%98%E9%AB%98%E5%B9%B6%E5%8F%91%E6%9C%8D%E5%8A%A1%E5%A6%82%E4%BD%95%E4%BF%9D%E8%AF%81%E7%BC%93%E5%AD%98%E4%B8%80%E8%87%B4%E6%80%A7/</guid>
      <description>34｜缓存一致性问题：高并发服务如何保证缓存一致性？ 你好，我是大明。今天我们来聊一个面试缓存必然会涉及的一个问题：怎么保证数据一致性？ 上一节课我详细分析了各个缓存模式，你会发现这些缓存模式要么存在数据丢失的可能，要么在某一段时间内总是会不一致。那么有没有能够彻底解决缓存一致性的方</description>
    </item>
    
    <item>
      <title>33｜缓存模式：缓存模式能不能解决缓存一致性问题？</title>
      <link>http://hmx224.github.io/interviews/33%E7%BC%93%E5%AD%98%E6%A8%A1%E5%BC%8F%E7%BC%93%E5%AD%98%E6%A8%A1%E5%BC%8F%E8%83%BD%E4%B8%8D%E8%83%BD%E8%A7%A3%E5%86%B3%E7%BC%93%E5%AD%98%E4%B8%80%E8%87%B4%E6%80%A7%E9%97%AE%E9%A2%98/</link>
      <pubDate>Wed, 11 Sep 2024 00:00:00 +0000</pubDate>
      
      <guid>http://hmx224.github.io/interviews/33%E7%BC%93%E5%AD%98%E6%A8%A1%E5%BC%8F%E7%BC%93%E5%AD%98%E6%A8%A1%E5%BC%8F%E8%83%BD%E4%B8%8D%E8%83%BD%E8%A7%A3%E5%86%B3%E7%BC%93%E5%AD%98%E4%B8%80%E8%87%B4%E6%80%A7%E9%97%AE%E9%A2%98/</guid>
      <description>33｜缓存模式：缓存模式能不能解决缓存一致性问题？ 你好，我是大明。今天我们来学习缓存的另外一个热点——缓存模式。 缓存模式在面试中属于高频问题，但是大部分人的回答都会有两个缺陷：一个是不够完整，也就是只知道一部分缓存模式；另外一个是不够深入，也就是只能泛泛而谈。尤其是有些面试官会故</description>
    </item>
    
    <item>
      <title>32｜缓存淘汰策略：怎么淘汰缓存命中率才不会下降？</title>
      <link>http://hmx224.github.io/interviews/32%E7%BC%93%E5%AD%98%E6%B7%98%E6%B1%B0%E7%AD%96%E7%95%A5%E6%80%8E%E4%B9%88%E6%B7%98%E6%B1%B0%E7%BC%93%E5%AD%98%E5%91%BD%E4%B8%AD%E7%8E%87%E6%89%8D%E4%B8%8D%E4%BC%9A%E4%B8%8B%E9%99%8D/</link>
      <pubDate>Wed, 11 Sep 2024 00:00:00 +0000</pubDate>
      
      <guid>http://hmx224.github.io/interviews/32%E7%BC%93%E5%AD%98%E6%B7%98%E6%B1%B0%E7%AD%96%E7%95%A5%E6%80%8E%E4%B9%88%E6%B7%98%E6%B1%B0%E7%BC%93%E5%AD%98%E5%91%BD%E4%B8%AD%E7%8E%87%E6%89%8D%E4%B8%8D%E4%BC%9A%E4%B8%8B%E9%99%8D/</guid>
      <description>32｜缓存淘汰策略：怎么淘汰缓存命中率才不会下降？ 你好，我是大明。今天我们来聊一个使用缓存的时候绕不开的话题——如何淘汰键值对？ 这个问题在面试中也很常见。大多数人都能把八股文背好，也就是常见的 LRU 之类的策略都能回答出来。而它在面试中的独特优势，就是能够根据业务设计出花样繁多的解决方</description>
    </item>
    
    <item>
      <title>31｜缓存过期：为什么Redis不立刻删除已经过期的数据？</title>
      <link>http://hmx224.github.io/interviews/31%E7%BC%93%E5%AD%98%E8%BF%87%E6%9C%9F%E4%B8%BA%E4%BB%80%E4%B9%88Redis%E4%B8%8D%E7%AB%8B%E5%88%BB%E5%88%A0%E9%99%A4%E5%B7%B2%E7%BB%8F%E8%BF%87%E6%9C%9F%E7%9A%84%E6%95%B0%E6%8D%AE/</link>
      <pubDate>Wed, 11 Sep 2024 00:00:00 +0000</pubDate>
      
      <guid>http://hmx224.github.io/interviews/31%E7%BC%93%E5%AD%98%E8%BF%87%E6%9C%9F%E4%B8%BA%E4%BB%80%E4%B9%88Redis%E4%B8%8D%E7%AB%8B%E5%88%BB%E5%88%A0%E9%99%A4%E5%B7%B2%E7%BB%8F%E8%BF%87%E6%9C%9F%E7%9A%84%E6%95%B0%E6%8D%AE/</guid>
      <description>31｜缓存过期：为什么 Redis 不立刻删除已经过期的数据？ 你好，我是大明。今天我们来讨论一个全新的话题——缓存。 缓存在实践中、面试中的重要性不言而喻。应该说，缓存用好了就能解决你大部分的性能问题。反过来，如果缓存没有用好，那么系统性能是不可能好的。 缓存在面试中也分成两个方向：一个是理论上</description>
    </item>
    
    <item>
      <title>30｜Kafka综合运用：怎么在实践中保证Kafka高性能？</title>
      <link>http://hmx224.github.io/interviews/30Kafka%E7%BB%BC%E5%90%88%E8%BF%90%E7%94%A8%E6%80%8E%E4%B9%88%E5%9C%A8%E5%AE%9E%E8%B7%B5%E4%B8%AD%E4%BF%9D%E8%AF%81Kafka%E9%AB%98%E6%80%A7%E8%83%BD/</link>
      <pubDate>Wed, 11 Sep 2024 00:00:00 +0000</pubDate>
      
      <guid>http://hmx224.github.io/interviews/30Kafka%E7%BB%BC%E5%90%88%E8%BF%90%E7%94%A8%E6%80%8E%E4%B9%88%E5%9C%A8%E5%AE%9E%E8%B7%B5%E4%B8%AD%E4%BF%9D%E8%AF%81Kafka%E9%AB%98%E6%80%A7%E8%83%BD/</guid>
      <description>30｜Kafka 综合运用：怎么在实践中保证 Kafka 高性能？ 你好，我是大明。今天我们来聊 Kafka 的最后一个话题——怎么在实践中保证 Kafka 高性能？也可以说，怎么在业务里面优化使用 Kafka 的性能。 在前面微服务部分，我就说高并发可遇不可求，而高可用和高性能是可求的。在追求高性能的时候，Kafka 自然也是一个绕</description>
    </item>
    
    <item>
      <title>29｜高性能：Kafka为什么性能那么好？</title>
      <link>http://hmx224.github.io/interviews/29%E9%AB%98%E6%80%A7%E8%83%BDKafka%E4%B8%BA%E4%BB%80%E4%B9%88%E6%80%A7%E8%83%BD%E9%82%A3%E4%B9%88%E5%A5%BD/</link>
      <pubDate>Wed, 11 Sep 2024 00:00:00 +0000</pubDate>
      
      <guid>http://hmx224.github.io/interviews/29%E9%AB%98%E6%80%A7%E8%83%BDKafka%E4%B8%BA%E4%BB%80%E4%B9%88%E6%80%A7%E8%83%BD%E9%82%A3%E4%B9%88%E5%A5%BD/</guid>
      <description>29｜高性能：Kafka 为什么性能那么好？ 你好，我是大明。今天我们来讨论一个问题，Kafka 的性能为什么那么好？ Kafka 的高性能话题也算是热点了，如果你面试的公司在并发量或者数据量上已经到了一定地步，那么面试的时候大概率逃不过这个问题。 大部分人面不好这个部分的原因只有一个：Kafka 为</description>
    </item>
    
    <item>
      <title>28｜架构设计：如果让你设计一个消息队列，你会怎么设计它的架构？</title>
      <link>http://hmx224.github.io/interviews/28%E6%9E%B6%E6%9E%84%E8%AE%BE%E8%AE%A1%E5%A6%82%E6%9E%9C%E8%AE%A9%E4%BD%A0%E8%AE%BE%E8%AE%A1%E4%B8%80%E4%B8%AA%E6%B6%88%E6%81%AF%E9%98%9F%E5%88%97%E4%BD%A0%E4%BC%9A%E6%80%8E%E4%B9%88%E8%AE%BE%E8%AE%A1%E5%AE%83%E7%9A%84%E6%9E%B6%E6%9E%84/</link>
      <pubDate>Wed, 11 Sep 2024 00:00:00 +0000</pubDate>
      
      <guid>http://hmx224.github.io/interviews/28%E6%9E%B6%E6%9E%84%E8%AE%BE%E8%AE%A1%E5%A6%82%E6%9E%9C%E8%AE%A9%E4%BD%A0%E8%AE%BE%E8%AE%A1%E4%B8%80%E4%B8%AA%E6%B6%88%E6%81%AF%E9%98%9F%E5%88%97%E4%BD%A0%E4%BC%9A%E6%80%8E%E4%B9%88%E8%AE%BE%E8%AE%A1%E5%AE%83%E7%9A%84%E6%9E%B6%E6%9E%84/</guid>
      <description>28｜架构设计：如果让你设计一个消息队列，你会怎么设计它的架构？ 你好，我是大明。今天我们学习消息队列的架构设计，也就是如果让你设计一个消息队列，你会怎么做。 这个话题在面试中属于很难的一类，它要求你不仅要对 Kafka 本身有很深刻的理解，也要对分布式系统设计与实现有很深刻的理解。而且你还要在</description>
    </item>
    
    <item>
      <title>27｜重复消费：高并发场景下怎么保证消息不会重复消费？</title>
      <link>http://hmx224.github.io/interviews/27%E9%87%8D%E5%A4%8D%E6%B6%88%E8%B4%B9%E9%AB%98%E5%B9%B6%E5%8F%91%E5%9C%BA%E6%99%AF%E4%B8%8B%E6%80%8E%E4%B9%88%E4%BF%9D%E8%AF%81%E6%B6%88%E6%81%AF%E4%B8%8D%E4%BC%9A%E9%87%8D%E5%A4%8D%E6%B6%88%E8%B4%B9/</link>
      <pubDate>Wed, 11 Sep 2024 00:00:00 +0000</pubDate>
      
      <guid>http://hmx224.github.io/interviews/27%E9%87%8D%E5%A4%8D%E6%B6%88%E8%B4%B9%E9%AB%98%E5%B9%B6%E5%8F%91%E5%9C%BA%E6%99%AF%E4%B8%8B%E6%80%8E%E4%B9%88%E4%BF%9D%E8%AF%81%E6%B6%88%E6%81%AF%E4%B8%8D%E4%BC%9A%E9%87%8D%E5%A4%8D%E6%B6%88%E8%B4%B9/</guid>
      <description>27｜重复消费：高并发场景下怎么保证消息不会重复消费？ 你好，我是大明。今天我们来讨论一个在消息队列里面非常常见的话题——重复消费。 通过前面几节课的学习，我相信你已经发现了，很多方案都会引起一个问题：消息重复发送或者重复消费。而解决的思路基本上一致，就是把消费者设计成幂等的。也就是</description>
    </item>
    
    <item>
      <title>26｜消息不丢失：生产者收到写入成功响应后消息一定不会丢失吗？</title>
      <link>http://hmx224.github.io/interviews/26%E6%B6%88%E6%81%AF%E4%B8%8D%E4%B8%A2%E5%A4%B1%E7%94%9F%E4%BA%A7%E8%80%85%E6%94%B6%E5%88%B0%E5%86%99%E5%85%A5%E6%88%90%E5%8A%9F%E5%93%8D%E5%BA%94%E5%90%8E%E6%B6%88%E6%81%AF%E4%B8%80%E5%AE%9A%E4%B8%8D%E4%BC%9A%E4%B8%A2%E5%A4%B1%E5%90%97/</link>
      <pubDate>Wed, 11 Sep 2024 00:00:00 +0000</pubDate>
      
      <guid>http://hmx224.github.io/interviews/26%E6%B6%88%E6%81%AF%E4%B8%8D%E4%B8%A2%E5%A4%B1%E7%94%9F%E4%BA%A7%E8%80%85%E6%94%B6%E5%88%B0%E5%86%99%E5%85%A5%E6%88%90%E5%8A%9F%E5%93%8D%E5%BA%94%E5%90%8E%E6%B6%88%E6%81%AF%E4%B8%80%E5%AE%9A%E4%B8%8D%E4%BC%9A%E4%B8%A2%E5%A4%B1%E5%90%97/</guid>
      <description>26｜消息不丢失：生产者收到写入成功响应后消息一定不会丢失吗？ 你好，我是大明。今天我们来学习消息队列中的新主题——消息丢失。 和消息丢失相对应的概念叫做可靠消息，这两者基本上指的就是同一件事。在实践中，一旦遇到消息丢失的问题，是很难定位的。从理论上来说，要想理解消息丢失，就需要对生</description>
    </item>
    
    <item>
      <title>25｜消息积压：业务突然增长，导致消息消费不过来怎么办？</title>
      <link>http://hmx224.github.io/interviews/25%E6%B6%88%E6%81%AF%E7%A7%AF%E5%8E%8B%E4%B8%9A%E5%8A%A1%E7%AA%81%E7%84%B6%E5%A2%9E%E9%95%BF%E5%AF%BC%E8%87%B4%E6%B6%88%E6%81%AF%E6%B6%88%E8%B4%B9%E4%B8%8D%E8%BF%87%E6%9D%A5%E6%80%8E%E4%B9%88%E5%8A%9E/</link>
      <pubDate>Wed, 11 Sep 2024 00:00:00 +0000</pubDate>
      
      <guid>http://hmx224.github.io/interviews/25%E6%B6%88%E6%81%AF%E7%A7%AF%E5%8E%8B%E4%B8%9A%E5%8A%A1%E7%AA%81%E7%84%B6%E5%A2%9E%E9%95%BF%E5%AF%BC%E8%87%B4%E6%B6%88%E6%81%AF%E6%B6%88%E8%B4%B9%E4%B8%8D%E8%BF%87%E6%9D%A5%E6%80%8E%E4%B9%88%E5%8A%9E/</guid>
      <description>25｜消息积压：业务突然增长，导致消息消费不过来怎么办？ 你好，我是大明。今天我们来学习消息队列中消息积压问题的解决办法。 我们说的消息积压是指消息生产速率大于消费速率，所以消息会在broker上存放着。消息积压可能会导致消息要等很久才会被消费，这对于一些业务来说损害很大。特别是一些</description>
    </item>
    
    <item>
      <title>24｜消息顺序：保证消息有序，一个topic只能有一个partition吗？</title>
      <link>http://hmx224.github.io/interviews/24%E6%B6%88%E6%81%AF%E9%A1%BA%E5%BA%8F%E4%BF%9D%E8%AF%81%E6%B6%88%E6%81%AF%E6%9C%89%E5%BA%8F%E4%B8%80%E4%B8%AAtopic%E5%8F%AA%E8%83%BD%E6%9C%89%E4%B8%80%E4%B8%AApartition%E5%90%97/</link>
      <pubDate>Wed, 11 Sep 2024 00:00:00 +0000</pubDate>
      
      <guid>http://hmx224.github.io/interviews/24%E6%B6%88%E6%81%AF%E9%A1%BA%E5%BA%8F%E4%BF%9D%E8%AF%81%E6%B6%88%E6%81%AF%E6%9C%89%E5%BA%8F%E4%B8%80%E4%B8%AAtopic%E5%8F%AA%E8%83%BD%E6%9C%89%E4%B8%80%E4%B8%AApartition%E5%90%97/</guid>
      <description>24｜消息顺序：保证消息有序，一个 topic 只能有一个 partition 吗？ 你好，我是大明。我们今天接着学习消息队列的新主题——有序消息。 在消息队列的相关的面试里面，有序消息和消息不丢失、消息重复消费是三个并列的面试热点，同时在实践中也很容易遇到要求使用有序消息的场景。但是大部分人在面试的时候，无法深入</description>
    </item>
    
    <item>
      <title>23｜延迟消息：怎么在Kafka上支持延迟消息？</title>
      <link>http://hmx224.github.io/interviews/23%E5%BB%B6%E8%BF%9F%E6%B6%88%E6%81%AF%E6%80%8E%E4%B9%88%E5%9C%A8Kafka%E4%B8%8A%E6%94%AF%E6%8C%81%E5%BB%B6%E8%BF%9F%E6%B6%88%E6%81%AF/</link>
      <pubDate>Wed, 11 Sep 2024 00:00:00 +0000</pubDate>
      
      <guid>http://hmx224.github.io/interviews/23%E5%BB%B6%E8%BF%9F%E6%B6%88%E6%81%AF%E6%80%8E%E4%B9%88%E5%9C%A8Kafka%E4%B8%8A%E6%94%AF%E6%8C%81%E5%BB%B6%E8%BF%9F%E6%B6%88%E6%81%AF/</guid>
      <description>23｜延迟消息：怎么在 Kafka 上支持延迟消息？ 你好，我是大明。今天我们来讨论一个在消息队列面试中非常热的话题——延迟消息。 延迟消息在 Kafka 面试里面是非常热门的，其他消息队列多少也会问，但是不如 Kafka 问得频繁。因为 Kafka 不支持延迟消息是大家都知道的。但是偏偏 Kafka 又用得多，很多业务场景也要求使用延迟消息</description>
    </item>
    
    <item>
      <title>22｜消息队列：消息队列可以用来解决什么问题？</title>
      <link>http://hmx224.github.io/interviews/22%E6%B6%88%E6%81%AF%E9%98%9F%E5%88%97%E6%B6%88%E6%81%AF%E9%98%9F%E5%88%97%E5%8F%AF%E4%BB%A5%E7%94%A8%E6%9D%A5%E8%A7%A3%E5%86%B3%E4%BB%80%E4%B9%88%E9%97%AE%E9%A2%98/</link>
      <pubDate>Wed, 11 Sep 2024 00:00:00 +0000</pubDate>
      
      <guid>http://hmx224.github.io/interviews/22%E6%B6%88%E6%81%AF%E9%98%9F%E5%88%97%E6%B6%88%E6%81%AF%E9%98%9F%E5%88%97%E5%8F%AF%E4%BB%A5%E7%94%A8%E6%9D%A5%E8%A7%A3%E5%86%B3%E4%BB%80%E4%B9%88%E9%97%AE%E9%A2%98/</guid>
      <description>22｜消息队列：消息队列可以用来解决什么问题？ 你好，我是大明。 从今天开始我们要学习一个新的主题——消息队列。一直以来，消息队列都是业界用于构建高并发、高可用系统的利器。即便是简单的业务开发，也可以通过消息队列的解耦、异步特性来提高性能和可用性。 消息队列和数据库、缓存并列为面试中最</description>
    </item>
    
    <item>
      <title>21｜数据库综合应用：怎么保证数据库的高可用、高性能？</title>
      <link>http://hmx224.github.io/interviews/21%E6%95%B0%E6%8D%AE%E5%BA%93%E7%BB%BC%E5%90%88%E5%BA%94%E7%94%A8%E6%80%8E%E4%B9%88%E4%BF%9D%E8%AF%81%E6%95%B0%E6%8D%AE%E5%BA%93%E7%9A%84%E9%AB%98%E5%8F%AF%E7%94%A8%E9%AB%98%E6%80%A7%E8%83%BD/</link>
      <pubDate>Wed, 11 Sep 2024 00:00:00 +0000</pubDate>
      
      <guid>http://hmx224.github.io/interviews/21%E6%95%B0%E6%8D%AE%E5%BA%93%E7%BB%BC%E5%90%88%E5%BA%94%E7%94%A8%E6%80%8E%E4%B9%88%E4%BF%9D%E8%AF%81%E6%95%B0%E6%8D%AE%E5%BA%93%E7%9A%84%E9%AB%98%E5%8F%AF%E7%94%A8%E9%AB%98%E6%80%A7%E8%83%BD/</guid>
      <description>21｜数据库综合应用：怎么保证数据库的高可用、高性能？ 你好，我是大明。 我很早就注意到，很多人在平时工作中就是设计一下表结构和索引。好一点的可能还会有一些查询优化的经验，也有少数人做了很多跟数据库有关的事情，但是没办法把它们系统组织起来，给面试官留下深刻印象。 现在我们有了前面几节课</description>
    </item>
    
    <item>
      <title>20｜分库分表容量预估：分库分表的时候怎么计算需要多少个库多少个表？</title>
      <link>http://hmx224.github.io/interviews/20%E5%88%86%E5%BA%93%E5%88%86%E8%A1%A8%E5%AE%B9%E9%87%8F%E9%A2%84%E4%BC%B0%E5%88%86%E5%BA%93%E5%88%86%E8%A1%A8%E7%9A%84%E6%97%B6%E5%80%99%E6%80%8E%E4%B9%88%E8%AE%A1%E7%AE%97%E9%9C%80%E8%A6%81%E5%A4%9A%E5%B0%91%E4%B8%AA%E5%BA%93%E5%A4%9A%E5%B0%91%E4%B8%AA%E8%A1%A8/</link>
      <pubDate>Wed, 11 Sep 2024 00:00:00 +0000</pubDate>
      
      <guid>http://hmx224.github.io/interviews/20%E5%88%86%E5%BA%93%E5%88%86%E8%A1%A8%E5%AE%B9%E9%87%8F%E9%A2%84%E4%BC%B0%E5%88%86%E5%BA%93%E5%88%86%E8%A1%A8%E7%9A%84%E6%97%B6%E5%80%99%E6%80%8E%E4%B9%88%E8%AE%A1%E7%AE%97%E9%9C%80%E8%A6%81%E5%A4%9A%E5%B0%91%E4%B8%AA%E5%BA%93%E5%A4%9A%E5%B0%91%E4%B8%AA%E8%A1%A8/</guid>
      <description>20｜分库分表容量预估：分库分表的时候怎么计算需要多少个库多少个表？ 你好，我是大明。今天我们来聊一下如何分库分表中确定容量的问题。 在分库分表的面试中，基本上面试官都会问你，你究竟分了几个库分了几个表。这是因为面试官比较关注数据库的数据量问题，如果容量预估不准确，那么后续就需要扩容</description>
    </item>
    
    <item>
      <title>19｜分库分表无分库分表键查询：你按照买家分库分表，那我卖家怎么查？</title>
      <link>http://hmx224.github.io/interviews/19%E5%88%86%E5%BA%93%E5%88%86%E8%A1%A8%E6%97%A0%E5%88%86%E5%BA%93%E5%88%86%E8%A1%A8%E9%94%AE%E6%9F%A5%E8%AF%A2%E4%BD%A0%E6%8C%89%E7%85%A7%E4%B9%B0%E5%AE%B6%E5%88%86%E5%BA%93%E5%88%86%E8%A1%A8%E9%82%A3%E6%88%91%E5%8D%96%E5%AE%B6%E6%80%8E%E4%B9%88%E6%9F%A5/</link>
      <pubDate>Wed, 11 Sep 2024 00:00:00 +0000</pubDate>
      
      <guid>http://hmx224.github.io/interviews/19%E5%88%86%E5%BA%93%E5%88%86%E8%A1%A8%E6%97%A0%E5%88%86%E5%BA%93%E5%88%86%E8%A1%A8%E9%94%AE%E6%9F%A5%E8%AF%A2%E4%BD%A0%E6%8C%89%E7%85%A7%E4%B9%B0%E5%AE%B6%E5%88%86%E5%BA%93%E5%88%86%E8%A1%A8%E9%82%A3%E6%88%91%E5%8D%96%E5%AE%B6%E6%80%8E%E4%B9%88%E6%9F%A5/</guid>
      <description>19｜分库分表无分库分表键查询：你按照买家分库分表，那我卖家怎么查？ 你好，我是大明，今天我和你来聊一聊分库分表下的一种特殊的查询——无分库分表键查询。 在很多业务里面，分库分表键都是根据主要查询筛选出来的。那么就会有这样一个问题，那些不怎么重要的查询怎么解决呢？ 比如说大多数电商的订</description>
    </item>
    
    <item>
      <title>18｜分布式事务：如何同时保证分库分表、ACID和高性能？</title>
      <link>http://hmx224.github.io/interviews/18%E5%88%86%E5%B8%83%E5%BC%8F%E4%BA%8B%E5%8A%A1%E5%A6%82%E4%BD%95%E5%90%8C%E6%97%B6%E4%BF%9D%E8%AF%81%E5%88%86%E5%BA%93%E5%88%86%E8%A1%A8ACID%E5%92%8C%E9%AB%98%E6%80%A7%E8%83%BD/</link>
      <pubDate>Wed, 11 Sep 2024 00:00:00 +0000</pubDate>
      
      <guid>http://hmx224.github.io/interviews/18%E5%88%86%E5%B8%83%E5%BC%8F%E4%BA%8B%E5%8A%A1%E5%A6%82%E4%BD%95%E5%90%8C%E6%97%B6%E4%BF%9D%E8%AF%81%E5%88%86%E5%BA%93%E5%88%86%E8%A1%A8ACID%E5%92%8C%E9%AB%98%E6%80%A7%E8%83%BD/</guid>
      <description>18｜分布式事务：如何同时保证分库分表、ACID和高性能？ 你好，我是大明。 我们在把单库拆分成为分库分表之后，一个巨大的挑战就是 本地事务变成了分布式事务。事实上，即便没有分库分表，在微服务架构之下我们也还是会面临分布式事务的问题。所以，在学习了微服务架构又学习了分库分表之后，是时候</description>
    </item>
    
    <item>
      <title>17｜分库分表分页查询：为什么你的分页查询又慢又耗费内存？</title>
      <link>http://hmx224.github.io/interviews/17%E5%88%86%E5%BA%93%E5%88%86%E8%A1%A8%E5%88%86%E9%A1%B5%E6%9F%A5%E8%AF%A2%E4%B8%BA%E4%BB%80%E4%B9%88%E4%BD%A0%E7%9A%84%E5%88%86%E9%A1%B5%E6%9F%A5%E8%AF%A2%E5%8F%88%E6%85%A2%E5%8F%88%E8%80%97%E8%B4%B9%E5%86%85%E5%AD%98/</link>
      <pubDate>Wed, 11 Sep 2024 00:00:00 +0000</pubDate>
      
      <guid>http://hmx224.github.io/interviews/17%E5%88%86%E5%BA%93%E5%88%86%E8%A1%A8%E5%88%86%E9%A1%B5%E6%9F%A5%E8%AF%A2%E4%B8%BA%E4%BB%80%E4%B9%88%E4%BD%A0%E7%9A%84%E5%88%86%E9%A1%B5%E6%9F%A5%E8%AF%A2%E5%8F%88%E6%85%A2%E5%8F%88%E8%80%97%E8%B4%B9%E5%86%85%E5%AD%98/</guid>
      <description>17｜分库分表分页查询：为什么你的分页查询又慢又耗费内存？ 你好，我是大明。今天我们来聊一聊分库分表分页查询。 在实践中，分页是分库分表之后肯定要解决的问题，如果解决方案没选好，那么很容易出现性能问题。分页的解决方案很多，不过能够在面试中系统地将所有的方案都说出来的候选人可以说是少之</description>
    </item>
    
    <item>
      <title>16｜分库分表主键生成：如何设计一个主键生成算法？</title>
      <link>http://hmx224.github.io/interviews/16%E5%88%86%E5%BA%93%E5%88%86%E8%A1%A8%E4%B8%BB%E9%94%AE%E7%94%9F%E6%88%90%E5%A6%82%E4%BD%95%E8%AE%BE%E8%AE%A1%E4%B8%80%E4%B8%AA%E4%B8%BB%E9%94%AE%E7%94%9F%E6%88%90%E7%AE%97%E6%B3%95/</link>
      <pubDate>Wed, 11 Sep 2024 00:00:00 +0000</pubDate>
      
      <guid>http://hmx224.github.io/interviews/16%E5%88%86%E5%BA%93%E5%88%86%E8%A1%A8%E4%B8%BB%E9%94%AE%E7%94%9F%E6%88%90%E5%A6%82%E4%BD%95%E8%AE%BE%E8%AE%A1%E4%B8%80%E4%B8%AA%E4%B8%BB%E9%94%AE%E7%94%9F%E6%88%90%E7%AE%97%E6%B3%95/</guid>
      <description>16｜分库分表主键生成：如何设计一个主键生成算法？ 你好，我是大明。今天我们来聊一聊分库分表——主键生成。 分库分表在面试里是一个非常热门，而且偏难的一个话题。这节课我就带你来攻克这个难题，带你了解UUID、自增主键和雪花算法的特点，并且教你在面试的时候刷出亮点。在这些基础上，我会进</description>
    </item>
    
    <item>
      <title>15｜数据迁移：如何在不停机的情况下保证迁移数据的一致性？</title>
      <link>http://hmx224.github.io/interviews/15%E6%95%B0%E6%8D%AE%E8%BF%81%E7%A7%BB%E5%A6%82%E4%BD%95%E5%9C%A8%E4%B8%8D%E5%81%9C%E6%9C%BA%E7%9A%84%E6%83%85%E5%86%B5%E4%B8%8B%E4%BF%9D%E8%AF%81%E8%BF%81%E7%A7%BB%E6%95%B0%E6%8D%AE%E7%9A%84%E4%B8%80%E8%87%B4%E6%80%A7/</link>
      <pubDate>Wed, 11 Sep 2024 00:00:00 +0000</pubDate>
      
      <guid>http://hmx224.github.io/interviews/15%E6%95%B0%E6%8D%AE%E8%BF%81%E7%A7%BB%E5%A6%82%E4%BD%95%E5%9C%A8%E4%B8%8D%E5%81%9C%E6%9C%BA%E7%9A%84%E6%83%85%E5%86%B5%E4%B8%8B%E4%BF%9D%E8%AF%81%E8%BF%81%E7%A7%BB%E6%95%B0%E6%8D%AE%E7%9A%84%E4%B8%80%E8%87%B4%E6%80%A7/</guid>
      <description>15｜数据迁移：如何在不停机的情况下保证迁移数据的一致性？ 你好，我是大明。今天我们来聊聊数据迁移的问题。 我之前就注意到很多人的简历里面都会提到数据迁移方面的内容。比如： 重构老系统：使用新的表结构来存储数据； 单库拆分分库分表、分库分表扩容； 大表修改表结构定义。 但是在面试的时候，他们</description>
    </item>
    
    <item>
      <title>14｜数据库事务：事务提交了，你的数据就一定不会丢吗？</title>
      <link>http://hmx224.github.io/interviews/14%E6%95%B0%E6%8D%AE%E5%BA%93%E4%BA%8B%E5%8A%A1%E4%BA%8B%E5%8A%A1%E6%8F%90%E4%BA%A4%E4%BA%86%E4%BD%A0%E7%9A%84%E6%95%B0%E6%8D%AE%E5%B0%B1%E4%B8%80%E5%AE%9A%E4%B8%8D%E4%BC%9A%E4%B8%A2%E5%90%97/</link>
      <pubDate>Wed, 11 Sep 2024 00:00:00 +0000</pubDate>
      
      <guid>http://hmx224.github.io/interviews/14%E6%95%B0%E6%8D%AE%E5%BA%93%E4%BA%8B%E5%8A%A1%E4%BA%8B%E5%8A%A1%E6%8F%90%E4%BA%A4%E4%BA%86%E4%BD%A0%E7%9A%84%E6%95%B0%E6%8D%AE%E5%B0%B1%E4%B8%80%E5%AE%9A%E4%B8%8D%E4%BC%9A%E4%B8%A2%E5%90%97/</guid>
      <description>14｜数据库事务：事务提交了，你的数据就一定不会丢吗？ 你好，我是邓明。今天我们来学习数据库中非常重要的一部分——数据库事务。这节课的内容和前面 MVCC 的内容联系很紧密，你要结合在一起学习。 数据库事务在面试中占据了比较重的分量。如果你面的是非常初级的岗位，那么可能就是问问事务的 ACID 特性。不</description>
    </item>
    
    <item>
      <title>13｜MVCC协议：MySQL在修改数据的时候，还能不能读到这条数据？</title>
      <link>http://hmx224.github.io/interviews/13MVCC%E5%8D%8F%E8%AE%AEMySQL%E5%9C%A8%E4%BF%AE%E6%94%B9%E6%95%B0%E6%8D%AE%E7%9A%84%E6%97%B6%E5%80%99%E8%BF%98%E8%83%BD%E4%B8%8D%E8%83%BD%E8%AF%BB%E5%88%B0%E8%BF%99%E6%9D%A1%E6%95%B0%E6%8D%AE/</link>
      <pubDate>Wed, 11 Sep 2024 00:00:00 +0000</pubDate>
      
      <guid>http://hmx224.github.io/interviews/13MVCC%E5%8D%8F%E8%AE%AEMySQL%E5%9C%A8%E4%BF%AE%E6%94%B9%E6%95%B0%E6%8D%AE%E7%9A%84%E6%97%B6%E5%80%99%E8%BF%98%E8%83%BD%E4%B8%8D%E8%83%BD%E8%AF%BB%E5%88%B0%E8%BF%99%E6%9D%A1%E6%95%B0%E6%8D%AE/</guid>
      <description>13｜MVCC协议：MySQL 在修改数据的时候，还能不能读到这条数据？ 你好，我是大明。今天我们来学习 MySQL 面试中非常重要的一个内容—— MVCC 协议。 MVCC（Multi-Version Concurrency Control）中文叫做多版本并发控制协议，是 MySQL InnoDB 引擎用于控制数据并发访问的协议。它在面试中属于必面题，</description>
    </item>
    
    <item>
      <title>12｜数据库锁：明明有行锁，怎么突然就加了表锁？</title>
      <link>http://hmx224.github.io/interviews/12%E6%95%B0%E6%8D%AE%E5%BA%93%E9%94%81%E6%98%8E%E6%98%8E%E6%9C%89%E8%A1%8C%E9%94%81%E6%80%8E%E4%B9%88%E7%AA%81%E7%84%B6%E5%B0%B1%E5%8A%A0%E4%BA%86%E8%A1%A8%E9%94%81/</link>
      <pubDate>Wed, 11 Sep 2024 00:00:00 +0000</pubDate>
      
      <guid>http://hmx224.github.io/interviews/12%E6%95%B0%E6%8D%AE%E5%BA%93%E9%94%81%E6%98%8E%E6%98%8E%E6%9C%89%E8%A1%8C%E9%94%81%E6%80%8E%E4%B9%88%E7%AA%81%E7%84%B6%E5%B0%B1%E5%8A%A0%E4%BA%86%E8%A1%A8%E9%94%81/</guid>
      <description>12｜数据库锁：明明有行锁，怎么突然就加了表锁？ 你好，我是大明。今天我们来聊一聊 MySQL 中锁的问题。 锁在整个数据库面试中都是属于偏难，而且偏琐碎的一类问题。但是偏偏锁又很重要，比如说实践中遇到死锁影响了性能，这都要求我们必须对锁有一定的了解。并且锁的原理和索引、隔离级别都有关，所以很容</description>
    </item>
    
    <item>
      <title>11｜SQL优化：如何发现SQL中的问题？</title>
      <link>http://hmx224.github.io/interviews/11SQL%E4%BC%98%E5%8C%96%E5%A6%82%E4%BD%95%E5%8F%91%E7%8E%B0SQL%E4%B8%AD%E7%9A%84%E9%97%AE%E9%A2%98/</link>
      <pubDate>Wed, 11 Sep 2024 00:00:00 +0000</pubDate>
      
      <guid>http://hmx224.github.io/interviews/11SQL%E4%BC%98%E5%8C%96%E5%A6%82%E4%BD%95%E5%8F%91%E7%8E%B0SQL%E4%B8%AD%E7%9A%84%E9%97%AE%E9%A2%98/</guid>
      <description>11｜SQL优化：如何发现SQL中的问题？ 你好，我是大明。今天我们来聊一聊数据库中的 SQL 优化。 一般而言，在面试过程中，我都是鼓励你尽可能为自己打造熟练掌握性能优化技巧的人设。高并发项目经验可遇不可求，但是高性能是可以勉强追求的，性能优化就是追求高性能的方法。和我在微服务里面讲到的高</description>
    </item>
    
    <item>
      <title>10｜数据库索引：为什么MySQL用B&#43;树，MongoDB用B树？</title>
      <link>http://hmx224.github.io/interviews/10%E6%95%B0%E6%8D%AE%E5%BA%93%E7%B4%A2%E5%BC%95%E4%B8%BA%E4%BB%80%E4%B9%88MySQL%E7%94%A8B&#43;%E6%A0%91MongoDB%E7%94%A8B%E6%A0%91/</link>
      <pubDate>Wed, 11 Sep 2024 00:00:00 +0000</pubDate>
      
      <guid>http://hmx224.github.io/interviews/10%E6%95%B0%E6%8D%AE%E5%BA%93%E7%B4%A2%E5%BC%95%E4%B8%BA%E4%BB%80%E4%B9%88MySQL%E7%94%A8B&#43;%E6%A0%91MongoDB%E7%94%A8B%E6%A0%91/</guid>
      <description>10｜数据库索引：为什么MySQL用B+树，MongoDB用B树？ 你好，我是大明。 从这节课开始，我们将进入数据库这一章。在实际工作中，数据库设计得好不好、SQL 写得好不好将极大程度影响系统性能。而且，即便是再小的公司，也不可能说没有数据库，所以如果你担忧自己因为没有微服务架构经验</description>
    </item>
    
    <item>
      <title>10｜数据库索引：为什么MySQL用B&#43;树而不用B树？</title>
      <link>http://hmx224.github.io/interviews/10%E6%95%B0%E6%8D%AE%E5%BA%93%E7%B4%A2%E5%BC%95%E4%B8%BA%E4%BB%80%E4%B9%88MySQL%E7%94%A8B&#43;%E6%A0%91%E8%80%8C%E4%B8%8D%E7%94%A8B%E6%A0%91/</link>
      <pubDate>Wed, 11 Sep 2024 00:00:00 +0000</pubDate>
      
      <guid>http://hmx224.github.io/interviews/10%E6%95%B0%E6%8D%AE%E5%BA%93%E7%B4%A2%E5%BC%95%E4%B8%BA%E4%BB%80%E4%B9%88MySQL%E7%94%A8B&#43;%E6%A0%91%E8%80%8C%E4%B8%8D%E7%94%A8B%E6%A0%91/</guid>
      <description>10｜数据库索引：为什么MySQL用B+树而不用B树？ 你好，我是大明。 从这节课开始，我们将进入数据库这一章。在实际工作中，数据库设计得好不好、SQL 写得好不好将极大程度影响系统性能。而且，即便是再小的公司，也不可能说没有数据库，所以如果你担忧自己因为没有微服务架构经验难以通过面试</description>
    </item>
    
    <item>
      <title>09｜综合服务治理方案：怎么保证微服务应用的高可用？</title>
      <link>http://hmx224.github.io/interviews/09%E7%BB%BC%E5%90%88%E6%9C%8D%E5%8A%A1%E6%B2%BB%E7%90%86%E6%96%B9%E6%A1%88%E6%80%8E%E4%B9%88%E4%BF%9D%E8%AF%81%E5%BE%AE%E6%9C%8D%E5%8A%A1%E5%BA%94%E7%94%A8%E7%9A%84%E9%AB%98%E5%8F%AF%E7%94%A8/</link>
      <pubDate>Wed, 11 Sep 2024 00:00:00 +0000</pubDate>
      
      <guid>http://hmx224.github.io/interviews/09%E7%BB%BC%E5%90%88%E6%9C%8D%E5%8A%A1%E6%B2%BB%E7%90%86%E6%96%B9%E6%A1%88%E6%80%8E%E4%B9%88%E4%BF%9D%E8%AF%81%E5%BE%AE%E6%9C%8D%E5%8A%A1%E5%BA%94%E7%94%A8%E7%9A%84%E9%AB%98%E5%8F%AF%E7%94%A8/</guid>
      <description>09｜综合服务治理方案：怎么保证微服务应用的高可用？ 你好，我是大明。今天我们来聊一个综合性的话题：给你一个微服务应用，你怎么保证它的高可用？ 在面试互联网相关岗位的时候，大部分公司都会看重 高并发、 高可用 和 大数据 相关的经验。不过有没有高并发和大数据的项目经验有点儿看命。因为如果你不是</description>
    </item>
    
    <item>
      <title>08｜调用第三方：下游的接口不稳定性能又差怎么办？</title>
      <link>http://hmx224.github.io/interviews/08%E8%B0%83%E7%94%A8%E7%AC%AC%E4%B8%89%E6%96%B9%E4%B8%8B%E6%B8%B8%E7%9A%84%E6%8E%A5%E5%8F%A3%E4%B8%8D%E7%A8%B3%E5%AE%9A%E6%80%A7%E8%83%BD%E5%8F%88%E5%B7%AE%E6%80%8E%E4%B9%88%E5%8A%9E/</link>
      <pubDate>Wed, 11 Sep 2024 00:00:00 +0000</pubDate>
      
      <guid>http://hmx224.github.io/interviews/08%E8%B0%83%E7%94%A8%E7%AC%AC%E4%B8%89%E6%96%B9%E4%B8%8B%E6%B8%B8%E7%9A%84%E6%8E%A5%E5%8F%A3%E4%B8%8D%E7%A8%B3%E5%AE%9A%E6%80%A7%E8%83%BD%E5%8F%88%E5%B7%AE%E6%80%8E%E4%B9%88%E5%8A%9E/</guid>
      <description>08｜调用第三方：下游的接口不稳定性能又差怎么办？ 你好，我是大明。今天我们来聊一个跟微服务架构有很强关联的话题：如何保证调用第三方接口的可用性。 到目前为止，我们可以看到任何一个系统，都难免要跟第三方打交道。 登录注册要跟微信开放平台打交道，接入扫码登录。 金融要跟银行打交道，比如结算</description>
    </item>
    
    <item>
      <title>07｜超时控制：怎么保证用户一定能在1s内拿到响应？</title>
      <link>http://hmx224.github.io/interviews/07%E8%B6%85%E6%97%B6%E6%8E%A7%E5%88%B6%E6%80%8E%E4%B9%88%E4%BF%9D%E8%AF%81%E7%94%A8%E6%88%B7%E4%B8%80%E5%AE%9A%E8%83%BD%E5%9C%A81s%E5%86%85%E6%8B%BF%E5%88%B0%E5%93%8D%E5%BA%94/</link>
      <pubDate>Wed, 11 Sep 2024 00:00:00 +0000</pubDate>
      
      <guid>http://hmx224.github.io/interviews/07%E8%B6%85%E6%97%B6%E6%8E%A7%E5%88%B6%E6%80%8E%E4%B9%88%E4%BF%9D%E8%AF%81%E7%94%A8%E6%88%B7%E4%B8%80%E5%AE%9A%E8%83%BD%E5%9C%A81s%E5%86%85%E6%8B%BF%E5%88%B0%E5%93%8D%E5%BA%94/</guid>
      <description>07｜超时控制：怎么保证用户一定能在1s内拿到响应？ 你好，我是大明。今天我们来聊一个非常常见但是经常被忽略的话题——超时控制。 和前面我们讲的熔断、限流、降级和隔离一样，超时控制也是构建高可用系统的一环，因为 它能够节省系统资源，提高资源的有效利用率。 一般在面试的时候，关于超时控制，</description>
    </item>
    
    <item>
      <title>06｜隔离：怎么保证尊贵的VIP用户体验不受损？</title>
      <link>http://hmx224.github.io/interviews/06%E9%9A%94%E7%A6%BB%E6%80%8E%E4%B9%88%E4%BF%9D%E8%AF%81%E5%B0%8A%E8%B4%B5%E7%9A%84VIP%E7%94%A8%E6%88%B7%E4%BD%93%E9%AA%8C%E4%B8%8D%E5%8F%97%E6%8D%9F/</link>
      <pubDate>Wed, 11 Sep 2024 00:00:00 +0000</pubDate>
      
      <guid>http://hmx224.github.io/interviews/06%E9%9A%94%E7%A6%BB%E6%80%8E%E4%B9%88%E4%BF%9D%E8%AF%81%E5%B0%8A%E8%B4%B5%E7%9A%84VIP%E7%94%A8%E6%88%B7%E4%BD%93%E9%AA%8C%E4%B8%8D%E5%8F%97%E6%8D%9F/</guid>
      <description>06｜隔离：怎么保证尊贵的VIP用户体验不受损？ 你好，我是大明。今天我们来聊一聊微服务架构下的隔离功能。 隔离和前面讨论的熔断、降级、限流比起来，在面试中要“冷”一点。一个很重要的原因是隔离在实际中的应用要比限流这种措施少很多。尤其是在中小型公司，很多时候是用不到隔离的。但隔离依旧</description>
    </item>
    
    <item>
      <title>05｜限流：别说算法了，就问你“阈值”怎么算？</title>
      <link>http://hmx224.github.io/interviews/05%E9%99%90%E6%B5%81%E5%88%AB%E8%AF%B4%E7%AE%97%E6%B3%95%E4%BA%86%E5%B0%B1%E9%97%AE%E4%BD%A0%E9%98%88%E5%80%BC%E6%80%8E%E4%B9%88%E7%AE%97/</link>
      <pubDate>Wed, 11 Sep 2024 00:00:00 +0000</pubDate>
      
      <guid>http://hmx224.github.io/interviews/05%E9%99%90%E6%B5%81%E5%88%AB%E8%AF%B4%E7%AE%97%E6%B3%95%E4%BA%86%E5%B0%B1%E9%97%AE%E4%BD%A0%E9%98%88%E5%80%BC%E6%80%8E%E4%B9%88%E7%AE%97/</guid>
      <description>05｜限流：别说算法了，就问你“阈值”怎么算？ 你好，我是大明。今天我们来聊一聊微服务架构下的限流功能。 熔断、降级和限流是最常见的三种微服务架构可用性保障措施。和熔断、降级比起来，限流要更加复杂一些。大部分情况下，面试官面试限流就是随便问问算法，最多就是问问 BBR 之类的动态算法。但是有</description>
    </item>
    
    <item>
      <title>04｜降级：为什么每次大促的时候总是要把退款之类的服务停掉？</title>
      <link>http://hmx224.github.io/interviews/04%E9%99%8D%E7%BA%A7%E4%B8%BA%E4%BB%80%E4%B9%88%E6%AF%8F%E6%AC%A1%E5%A4%A7%E4%BF%83%E7%9A%84%E6%97%B6%E5%80%99%E6%80%BB%E6%98%AF%E8%A6%81%E6%8A%8A%E9%80%80%E6%AC%BE%E4%B9%8B%E7%B1%BB%E7%9A%84%E6%9C%8D%E5%8A%A1%E5%81%9C%E6%8E%89/</link>
      <pubDate>Wed, 11 Sep 2024 00:00:00 +0000</pubDate>
      
      <guid>http://hmx224.github.io/interviews/04%E9%99%8D%E7%BA%A7%E4%B8%BA%E4%BB%80%E4%B9%88%E6%AF%8F%E6%AC%A1%E5%A4%A7%E4%BF%83%E7%9A%84%E6%97%B6%E5%80%99%E6%80%BB%E6%98%AF%E8%A6%81%E6%8A%8A%E9%80%80%E6%AC%BE%E4%B9%8B%E7%B1%BB%E7%9A%84%E6%9C%8D%E5%8A%A1%E5%81%9C%E6%8E%89/</guid>
      <description>04｜降级：为什么每次大促的时候总是要把退款之类的服务停掉？ 你好，我是大明。今天我们来聊一聊微服务架构下的降级功能。 上节课我们讨论熔断的时候，我就提到过熔断、降级、限流是三个经常合并在一起讨论的 可用性 保障措施。所以如果你想要掌握高可用微服务架构，那么降级也是其中必不可少的一环。 可</description>
    </item>
    
    <item>
      <title>03｜熔断：熔断-恢复-熔断-恢复，抖来抖去怎么办？</title>
      <link>http://hmx224.github.io/interviews/03%E7%86%94%E6%96%AD%E7%86%94%E6%96%AD-%E6%81%A2%E5%A4%8D-%E7%86%94%E6%96%AD-%E6%81%A2%E5%A4%8D%E6%8A%96%E6%9D%A5%E6%8A%96%E5%8E%BB%E6%80%8E%E4%B9%88%E5%8A%9E/</link>
      <pubDate>Wed, 11 Sep 2024 00:00:00 +0000</pubDate>
      
      <guid>http://hmx224.github.io/interviews/03%E7%86%94%E6%96%AD%E7%86%94%E6%96%AD-%E6%81%A2%E5%A4%8D-%E7%86%94%E6%96%AD-%E6%81%A2%E5%A4%8D%E6%8A%96%E6%9D%A5%E6%8A%96%E5%8E%BB%E6%80%8E%E4%B9%88%E5%8A%9E/</guid>
      <description>03｜熔断：熔断-恢复-熔断-恢复，抖来抖去怎么办？ 你好，我是大明。今天我们继续学习微服务架构，这节课我们讨论一个新的主题：熔断。 在微服务架构里面，熔断-限流-降级一般是连在一起讨论的，熔断作为微服务架构可用性保障的重要手段之一，是我们必须要掌握的，而且要能够说清楚自己在实践中是</description>
    </item>
    
    <item>
      <title>02｜负载均衡：调用结果、缓存机制是怎么影响负载均衡的？</title>
      <link>http://hmx224.github.io/interviews/02%E8%B4%9F%E8%BD%BD%E5%9D%87%E8%A1%A1%E8%B0%83%E7%94%A8%E7%BB%93%E6%9E%9C%E7%BC%93%E5%AD%98%E6%9C%BA%E5%88%B6%E6%98%AF%E6%80%8E%E4%B9%88%E5%BD%B1%E5%93%8D%E8%B4%9F%E8%BD%BD%E5%9D%87%E8%A1%A1%E7%9A%84/</link>
      <pubDate>Wed, 11 Sep 2024 00:00:00 +0000</pubDate>
      
      <guid>http://hmx224.github.io/interviews/02%E8%B4%9F%E8%BD%BD%E5%9D%87%E8%A1%A1%E8%B0%83%E7%94%A8%E7%BB%93%E6%9E%9C%E7%BC%93%E5%AD%98%E6%9C%BA%E5%88%B6%E6%98%AF%E6%80%8E%E4%B9%88%E5%BD%B1%E5%93%8D%E8%B4%9F%E8%BD%BD%E5%9D%87%E8%A1%A1%E7%9A%84/</guid>
      <description>02｜负载均衡：调用结果、缓存机制是怎么影响负载均衡的？ 你好，我是大明。今天我们来聊一聊微服务架构下的负载均衡。 负载均衡在微服务架构里也处于一个核心位置。一般我们在准备调用任何服务的时候，第一个要解决的问题就是负载均衡该怎么做。负载均衡在微服务架构的面试中，也属于必面题目。 可惜的</description>
    </item>
    
    <item>
      <title>01｜服务注册与发现：AP和CP，你选哪个？</title>
      <link>http://hmx224.github.io/interviews/01%E6%9C%8D%E5%8A%A1%E6%B3%A8%E5%86%8C%E4%B8%8E%E5%8F%91%E7%8E%B0AP%E5%92%8CCP%E4%BD%A0%E9%80%89%E5%93%AA%E4%B8%AA/</link>
      <pubDate>Wed, 11 Sep 2024 00:00:00 +0000</pubDate>
      
      <guid>http://hmx224.github.io/interviews/01%E6%9C%8D%E5%8A%A1%E6%B3%A8%E5%86%8C%E4%B8%8E%E5%8F%91%E7%8E%B0AP%E5%92%8CCP%E4%BD%A0%E9%80%89%E5%93%AA%E4%B8%AA/</guid>
      <description>01｜服务注册与发现：AP和CP，你选哪个？ 你好，我是大明。今天我们来聊一聊微服务架构下的服务注册与发现。 服务注册与发现在微服务架构中处于一个非常核心的地位，也是面试中的常见问题。不过因为微服务架构大行其道，现在我们多少都能回答出来一些服务注册与发现的内容，也因此不容易在面试中刷</description>
    </item>
    
    <item>
      <title>开篇词｜面试如戏，台上一分钟，台下十年功</title>
      <link>http://hmx224.github.io/interviews/%E5%BC%80%E7%AF%87%E8%AF%8D%E9%9D%A2%E8%AF%95%E5%A6%82%E6%88%8F%E5%8F%B0%E4%B8%8A%E4%B8%80%E5%88%86%E9%92%9F%E5%8F%B0%E4%B8%8B%E5%8D%81%E5%B9%B4%E5%8A%9F/</link>
      <pubDate>Wed, 11 Sep 2024 00:00:00 +0000</pubDate>
      
      <guid>http://hmx224.github.io/interviews/%E5%BC%80%E7%AF%87%E8%AF%8D%E9%9D%A2%E8%AF%95%E5%A6%82%E6%88%8F%E5%8F%B0%E4%B8%8A%E4%B8%80%E5%88%86%E9%92%9F%E5%8F%B0%E4%B8%8B%E5%8D%81%E5%B9%B4%E5%8A%9F/</guid>
      <description>开篇词｜面试如戏，台上一分钟，台下十年功 你好，我是大明，一名热爱开源的IT猛男。欢迎你的加入，从今天开始我们一起升级打怪，通关后端技术面试。 作为一名早期从事业务开发转型成为中间件研发的工程师，我一直奋战在互联网一线，擅长设计和实现中间件，包括Web、ORM、微服务框架、网关、分库</description>
    </item>
    
    <item>
      <title>github中资料汇集</title>
      <link>http://hmx224.github.io/go/blog-golang/</link>
      <pubDate>Fri, 18 Dec 2020 14:14:21 +0800</pubDate>
      
      <guid>http://hmx224.github.io/go/blog-golang/</guid>
      <description>记录golang中优质资料github go-extend 收集一些常用的操作函数，辅助更快的完成开发工作，并减少重复代码。 https://github.com/thinkeridea/go-extend.git 面试题汇总</description>
    </item>
    
    <item>
      <title>工具</title>
      <link>http://hmx224.github.io/tools/first/</link>
      <pubDate>Tue, 15 Dec 2020 09:15:46 +0800</pubDate>
      
      <guid>http://hmx224.github.io/tools/first/</guid>
      <description>工具实例</description>
    </item>
    
    <item>
      <title>Laravel使用</title>
      <link>http://hmx224.github.io/php/laravel%E4%BD%BF%E7%94%A8/</link>
      <pubDate>Tue, 08 Dec 2020 22:21:56 +0800</pubDate>
      
      <guid>http://hmx224.github.io/php/laravel%E4%BD%BF%E7%94%A8/</guid>
      <description>一些实用的 Laravel 小技巧 Laravel 中一些常用的小技巧，额，说不定你就用上了。。。 1.侧栏 网站一般都有侧栏，用来显示分类，标签，热门文章，热门评论啥的，但是这些侧栏都是相对独立的模块，如果在每一个引入侧栏的视图中都单独导入与视图有关的数据的话，未免太冗余了。。。所以最佳的做法是：新建一个widg</description>
    </item>
    
    <item>
      <title>Laravel核心概念</title>
      <link>http://hmx224.github.io/php/laravel%E6%A0%B8%E5%BF%83%E6%A6%82%E5%BF%B5/</link>
      <pubDate>Tue, 08 Dec 2020 22:05:38 +0800</pubDate>
      
      <guid>http://hmx224.github.io/php/laravel%E6%A0%B8%E5%BF%83%E6%A6%82%E5%BF%B5/</guid>
      <description>Laravel的核心概念 知道Laravel的核心概念之后，当你写起Laravel时，会变得一目了然胸有成竹。 PHP的生命周期 万物皆有他的生命周期，Laravel 也不例外，Laravel应用程序也有自己的生命周期。Laravel是什么？一个PHP框架。所以要想真正说清Laravel</description>
    </item>
    
    <item>
      <title>深入理解php底层：php生命周期</title>
      <link>http://hmx224.github.io/php/first/</link>
      <pubDate>Tue, 08 Dec 2020 21:48:16 +0800</pubDate>
      
      <guid>http://hmx224.github.io/php/first/</guid>
      <description>深入理解php底层：php生命周期 1、PHP的运行模式： PHP两种运行模式是WEB模式、CLI模式。无论哪种模式，PHP工作原理都是一样的，作为一种SAPI运行。 1、当我们在终端敲入php这个命令的时候，它使用的是CLI。 它就像一个web服务器一样来支持php完成这个请求，请求完</description>
    </item>
    
    <item>
      <title>Laravel55博客项目说明xblog</title>
      <link>http://hmx224.github.io/post/laravel55%E5%8D%9A%E5%AE%A2%E9%A1%B9%E7%9B%AE%E8%AF%B4%E6%98%8Exblog/</link>
      <pubDate>Sun, 06 Dec 2020 15:25:27 +0800</pubDate>
      
      <guid>http://hmx224.github.io/post/laravel55%E5%8D%9A%E5%AE%A2%E9%A1%B9%E7%9B%AE%E8%AF%B4%E6%98%8Exblog/</guid>
      <description>[toc] 文档地址 https://xblog.lufficc.com/blog/how-to-install-my-blog 环境要求 安装npm install过程会存在问题，以下的版本可以运行成功 npm版本 6.14.4 node版本 v10.21.0 composer 2.0.7 { &amp;quot;private&amp;quot;: true, &amp;quot;scripts&amp;quot;: { &amp;quot;dev&amp;quot;: &amp;quot;npm run development&amp;quot;, &amp;quot;development&amp;quot;: &amp;quot;cross-env NODE_ENV=development node_modules/webpack/bin/webpack.js --progress --hide-modules --config=node_modules/laravel-mix/setup/webpack.config.js&amp;quot;, &amp;quot;watch&amp;quot;: &amp;quot;cross-env NODE_ENV=development node_modules/webpack/bin/webpack.js --watch --progress --hide-modules --config=node_modules/laravel-mix/setup/webpack.config.js&amp;quot;, &amp;quot;watch-poll&amp;quot;: &amp;quot;npm run watch -- --watch-poll&amp;quot;, &amp;quot;hot&amp;quot;: &amp;quot;cross-env NODE_ENV=development node_modules/webpack-dev-server/bin/webpack-dev-server.js --inline --hot --config=node_modules/laravel-mix/setup/webpack.config.js&amp;quot;, &amp;quot;prod&amp;quot;: &amp;quot;npm run production&amp;quot;, &amp;quot;production&amp;quot;: &amp;quot;cross-env NODE_ENV=production node_modules/webpack/bin/webpack.js --progress --hide-modules --config=node_modules/laravel-mix/setup/webpack.config.js&amp;quot; }, &amp;quot;devDependencies&amp;quot;: { &amp;quot;autosize&amp;quot;: &amp;quot;^4.0.2&amp;quot;, &amp;quot;bootstrap&amp;quot;: &amp;quot;^4.1.1&amp;quot;, &amp;quot;chart.js&amp;quot;: &amp;quot;^2.7.2&amp;quot;, &amp;quot;clipboard&amp;quot;: &amp;quot;^1.7.1&amp;quot;, &amp;quot;cross-env&amp;quot;: &amp;quot;^5.1.6&amp;quot;, &amp;quot;font-awesome&amp;quot;: &amp;quot;^4.7.0&amp;quot;, &amp;quot;highlight.js&amp;quot;: &amp;quot;^9.12.0&amp;quot;, &amp;quot;jquery&amp;quot;: &amp;quot;^3.2&amp;quot;, &amp;quot;jquery-bridget&amp;quot;: &amp;quot;^2.0.1&amp;quot;, &amp;quot;laravel-mix&amp;quot;: &amp;quot;^1.0&amp;quot;, &amp;quot;magnific-popup&amp;quot;: &amp;quot;^1.1.0&amp;quot;, &amp;quot;masonry-layout&amp;quot;: &amp;quot;^4.2.0&amp;quot;, &amp;quot;node-sass&amp;quot;: &amp;quot;^4.9.0&amp;quot;, &amp;quot;popper.js&amp;quot;: &amp;quot;^1.14.3&amp;quot;, &amp;quot;simplemde&amp;quot;: &amp;quot;^1.11.2&amp;quot;, &amp;quot;smooth-scroll&amp;quot;: &amp;quot;^14.2.0&amp;quot;, &amp;quot;uppy&amp;quot;:</description>
    </item>
    
    <item>
      <title>Centos中安装GUI</title>
      <link>http://hmx224.github.io/post/centos%E4%B8%AD%E5%AE%89%E8%A3%85GUI/</link>
      <pubDate>Sun, 29 Nov 2020 21:51:13 +0800</pubDate>
      
      <guid>http://hmx224.github.io/post/centos%E4%B8%AD%E5%AE%89%E8%A3%85GUI/</guid>
      <description>[toc] CentOS中安装GUI界面 关于vnc模式登陆报错 这个报错是密码错误，需要先输入账户名（默认是root），在输入密码（密码默认不显示），才能进入系统 (1)安装GNOME yum groupinstall &amp;quot;GNOME Desktop&amp;quot; &amp;quot;Graphical Administration Tools&amp;quot; -y 卸载GNOME yum groupremove &amp;quot;GNOME Desktop&amp;quot; Centos7 yum groupinstall 报错的解决办法 Maybe run: yum groups mark install (see man yum) No packages in any requested group available to install or update 解决： yum groupinstall &amp;quot;Office</description>
    </item>
    
    <item>
      <title>Linux的启动流程</title>
      <link>http://hmx224.github.io/post/Linux%E7%9A%84%E5%90%AF%E5%8A%A8%E6%B5%81%E7%A8%8B/</link>
      <pubDate>Sat, 28 Nov 2020 16:48:51 +0800</pubDate>
      
      <guid>http://hmx224.github.io/post/Linux%E7%9A%84%E5%90%AF%E5%8A%A8%E6%B5%81%E7%A8%8B/</guid>
      <description>Linux 的启动流程 第一步、加载内核 第二步、启动初始化进程 第三步、确定运行级别 第四步、加载开机启动程序 第五步、用户登录 第六步、进入 login shell 第七步，打开 non-login shell 参考地址：http://www.ruanyifeng.com/blog/2013/08/linux_boot_process.html</description>
    </item>
    
    <item>
      <title>Linux服务管理程序systemd</title>
      <link>http://hmx224.github.io/post/linux%E6%9C%8D%E5%8A%A1%E7%AE%A1%E7%90%86%E7%A8%8B%E5%BA%8Fsystemd/</link>
      <pubDate>Sat, 28 Nov 2020 16:33:53 +0800</pubDate>
      
      <guid>http://hmx224.github.io/post/linux%E6%9C%8D%E5%8A%A1%E7%AE%A1%E7%90%86%E7%A8%8B%E5%BA%8Fsystemd/</guid>
      <description>linux服务管理程序systemd Systemd 是 Linux 系统工具，用来启动守护进程，已成为大多数发行版的标准配置 systemd 是一个类似 supervisor 的守护进程 systemd是Linux操作系统的系统和管理服务程序，作为系统启动的第一个进程（进程id为1)，用于初始化系统，启动和维护用户空间服务。 Linux 的启动流程 http://www.ruanyifeng.com/blog/2013/08/linux_boot_process.html Systemd 入门</description>
    </item>
    
    <item>
      <title>SupervisorInfo</title>
      <link>http://hmx224.github.io/post/supervisorInfo/</link>
      <pubDate>Wed, 25 Nov 2020 17:56:39 +0800</pubDate>
      
      <guid>http://hmx224.github.io/post/supervisorInfo/</guid>
      <description>一、supervisor简介 Supervisor是用Python开发的一套通用的进程管理程序，能将一个普通的命令行进程变为后台daemon，并监控进程状态，异常退出时能自动重启。它是通过fork/exec的方式把这些被管理的进程当作supervisor的子进程来启动，这样只要在s</description>
    </item>
    
    <item>
      <title>Resume</title>
      <link>http://hmx224.github.io/post/resume/</link>
      <pubDate>Tue, 24 Nov 2020 16:00:16 +0800</pubDate>
      
      <guid>http://hmx224.github.io/post/resume/</guid>
      <description>后端工程师简历 个人信息 胡梦旭/男/1993 工作年限：4年 手机：15321604680(同微信) Email：ifanaticfire@gmail.com 期望职位：PHP/Go开发 期望薪资：面议 工作经历 公司名称 时间 部门 职位 工作职责 北京基云惠康科技有限公司 2018.3 ~ 至今 IT业务部 IT主管 1.</description>
    </item>
    
    <item>
      <title>Qrcode</title>
      <link>http://hmx224.github.io/post/qrcode/</link>
      <pubDate>Mon, 23 Nov 2020 14:27:30 +0800</pubDate>
      
      <guid>http://hmx224.github.io/post/qrcode/</guid>
      <description>用户扫码绑定编号</description>
    </item>
    
    <item>
      <title>记录早期爱狂热blog简介记录</title>
      <link>http://hmx224.github.io/post/ifanatic-blog-introduce/</link>
      <pubDate>Sun, 22 Nov 2020 09:15:46 +0800</pubDate>
      
      <guid>http://hmx224.github.io/post/ifanatic-blog-introduce/</guid>
      <description>知识图谱引导 记录起来,加油，奋进，努力！ 工具 pycharm 2018.03，有效期到：2100年,主要是注意流程点击这里 pycharm 破解流程,点击这里 phpstorm 2016.3.2,可使用百度云中的下载使用 goland 2019.01/2018.03(这个版本可以用),百度云下载使用 php校验身份证号,点击这里 html代码压缩</description>
    </item>
    
    <item>
      <title>关于我</title>
      <link>http://hmx224.github.io/about/</link>
      <pubDate>Sun, 22 Nov 2020 09:11:04 +0800</pubDate>
      
      <guid>http://hmx224.github.io/about/</guid>
      <description>开发工程师 专攻PHP开发、Python开发、Go开发工程师，服务器运维等</description>
    </item>
    
    <item>
      <title>归档</title>
      <link>http://hmx224.github.io/archives/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://hmx224.github.io/archives/</guid>
      <description></description>
    </item>
    
    <item>
      <title>搜索</title>
      <link>http://hmx224.github.io/search/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://hmx224.github.io/search/</guid>
      <description></description>
    </item>
    
  </channel>
</rss>